#!/usr/bin/python -tt
# -*- coding: utf-8 -*-
import os
import sys
import kobo.exceptions
import kobo.conf
import kobo.worker.main
import kobo.worker.tasks
# Assuming all tasks are in pyfaf/worker/tasks/task_*.py modules.
import pyfaf.worker.tasks

# Register generic kobo tasks.
kobo.worker.main.TaskContainer.register_module(kobo.worker.tasks, prefix="task_")
# Register project specific tasks.
kobo.worker.main.TaskContainer.register_module(pyfaf.worker.tasks, prefix="task_")

# Configuration
config_env = "WORKER_CONFIG_FILE"
config_default = "/etc/faf/worker.conf"
config_file = os.environ.get(config_env, config_default)
conf = kobo.conf.PyConfigParser()
try:
    conf.load_from_file(config_file)
except (IOError, TypeError):
    sys.stderr.write("\n\nError: The config file '%s' was not found.\nCreate the config file or specify the '%s'\nenvironment variable to override config file location.\n" % (config_default, config_env))
    exit(2)

try:
    kobo.worker.main.main(conf)
except KeyboardInterrupt:
    sys.stderr.write("\n\nExiting on user cancel.\n")
    exit(1)
except kobo.exceptions.ImproperlyConfigured, ex:
    sys.stderr.write("\n\nImproperly configured: %s\n" % ex)
    exit(3)
except IOError, ex:
    sys.stderr.write("\n\nIO Error: %s\n" % ex)
    exit(4)
