# -*- mode:python -*-
import os
import ConfigParser

version = "@version@"
bindir = "@bindir@"
sysconfdir = "@sysconfdir@"
prefix = "@prefix@"
datadir = "@datadir@"
libdir = "@libdir@"

def config_parser():
    config = ConfigParser.SafeConfigParser()
    config_list = [os.path.join(sysconfdir, "faf", "config"),
                   os.path.expanduser("~/.faf/config")]
    if "FAF_CONFIG_FILE" in os.environ:
        config_list.append(os.environ["FAF_CONFIG_FILE"])
    config.read(config_list)

    try:
        plugins_dir = config.get('Main', 'PluginsDir')
    except ConfigParser.Error:
        plugins_dir = None

    if plugins_dir:
        config_list += filter(lambda x: x.endswith('.conf'),
                              [os.path.join(plugins_dir, file)
                               for file in os.listdir(plugins_dir)])

    config.read(config_list)
    return config

def get(arg):
    parser = config_parser()
    if "." in arg:
        key = arg.lower()
    else:
        key = "default.{0}".format(arg.lower())

    if key in CONFIG:
        return CONFIG[key]

    return None

def load():
    result = {}
    parser = config_parser()
    for section in parser.sections():
        for option in parser.options(section):
            key = "{0}.{1}".format(section.lower(), option.lower())
            result[key] = parser.get(section, option)

    return result

# on import
CONFIG = load()
