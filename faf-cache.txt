faf-cache(1)
============

NAME
----
faf-cache - Add, view, update, remove data from the local cache.


SYNOPSIS
--------
'faf-cache' <operation> [<target>] [options]


DESCRIPTION
-----------
Manages local data storage (cache), where Faf keeps all data fetched
from external sources (bug reports from Bugzilla, builds and RPMs from
Koji etc.) and generated by local scripts.

All cache entries are stored in files under ~/.faf/cache, or other
directory as specified in user configuration. Some parts of cache
entries are also stored in an sqlite database that is located in
~/.faf/cache/sqlite.db by default.

Other Faf tools use faf-cache to add and remove entries instead of
working with the files directly, because faf-cache verifies that the
stored data are valid and consistent, and it allows to keep internal
cache logic in a single place.

Cache is structured as a set of targets, with each target containing a
number of entries. Target is a class/type of entries, usually coming
from single source, for example: rhbz-bug (bugs from Red Hat
Bugzilla), fedora-koji-tag (tags from Fedora Koji instance),
rhel-koji-tag (tags from RHEL Koji instance).

OPTIONS
-------

General options
~~~~~~~~~~~~~~~

-h, --help::
    Print help message.

-v, --verbose::
    Set verbosity level. Output more information to stdout
    and/or stderr, as appropriate. Can be used multiple times (-v -v
    -v, and also -vv, -vvv).

Operations
~~~~~~~~~~

list <target>::
        Show simple list of all stored objects.

show <target> <id>::
        Show contents of a single object.

verify [-t/--target <target> [-i/--id <id>]]::
        Check internal consistency of a single object, all objects of
        a single target, or all objects from all targets.

add <target> <id>::
	Add new object to the cache.

remove [-t/--target <target> [-i/--id <id>]]::
        Remove a single object from the cache, or remove all objects
        of a single target, or clean entire cache.

update <target> <id>::
        Update an object in the cache.

stats [-t/--target <target>]::
        Show statistics about cache.

rebuild-db [-t/--target <target>]::
	Rebuild cache SQLite database.

Targets pulled from external resources
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

rhbz-bug::
	Red Hat Bugzilla bugs.

rhbz-attachment::
	Red Hat Bugzilla attachments.

rhbz-comment::
	Red Hat Bugzilla comments.

rhbz-user::
	Red Hat Bugzilla users.

fedora-pkgdb-collection::
	Fedora package collection from Package Database.

fedora-pkgdb-package::
	Fedora package/component metadata from Package Database.

fedora-koji-tag::
	Tags from Fedora Koji instance.

fedora-koji-build::
	Builds from Fedora Koji instance.

fedora-koji-build-log-data::
	Builds logs from Fedora Koji instance.

fedora-koji-rpm::
	RPM metadata from Fedora Koji instance.

fedora-koji-rpm-data::
	RPM contents from Fedora Koji instance.

rhel-koji-tag::
	Tags from RHEL Koji instance.

rhel-koji-build::
	Builds from RHEL Koji instance.

rhel-koji-build-log-data::
	Builds logs from RHEL Koji instance.

rhel-koji-rpm::
	RPM metadata from RHEL Koji instance.

rhel-koji-rpm-data::
	RPM contents from RHEL Koji instance.

Targets generated by Faf tools
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

fedora-debuginfo-sources::
rhel-debuginfo-sources::
	Intermediate data for the debuginfo checker. It contains a
	list of source files provided by compiler in a build root
	after package build.

fedora-debuginfo-report::
rhel-debuginfo-report::
	Results of debuginfo check.

General options
~~~~~~~~~~~~~~~

-v, --verbose::


Options for list operation
~~~~~~~~~~~~~~~~~~~~~~~~~~

--format <format>::
	 Print the entries in a given format. <format> is a string, and
	 formatting works like with printf. The default format is "%id".
+
The placeholders are:

* '%id': unique identifier of the entry
* '%mtime': modification time of the entry in cache -- a number giving
  the number of seconds since the epoch (integer or float)

Options for verify operation
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

--remove-broken::
	All invalid entries found are removed from cache. Without this
	argument, the program prints an error message and exits when
	an invalid entry is found.

AUTHORS
-------
* Karel Klic
