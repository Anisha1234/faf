#!/usr/bin/python
import logging
import pyfaf
from pyfaf.storage import *

if __name__ == "__main__":
    cmdline_parser = pyfaf.argparse.ArgumentParser()
    cmdline = cmdline_parser.parse_args()

    db = pyfaf.storage.Database(debug=cmdline.verbose > 2)
    backtraces = db.session.query(ReportBacktrace).all()
    i = 0
    for backtrace in backtraces:
        i += 1
        logging.info("[{0}/{1}] Report #{2}".format(i, len(backtraces),
                                                    backtrace.report.id))
        j = 0
        while j < len(backtrace.frames) - 1:
            curframe = backtrace.frames[j]
            nextframe = backtrace.frames[j + 1]

            if curframe.inlined:
                while j < len(backtrace.frames) - 1 and nextframe.inlined and \
                      curframe.symbolsource_id == nextframe.symbolsource_id:
                    backtrace.frames.remove(nextframe)
                    db.session.delete(nextframe)
                    db.session.flush()

                    #shift
                    s = j + 1
                    while s < len(backtrace.frames):
                        backtrace.frames[s].order -= 1
                        s += 1

                    db.session.flush()

                    nextframe = backtrace.frames[j + 1]

            j += 1

        for frame in backtrace.frames:
            inlined = ""
            if frame.inlined:
                inlined = " (inlined)"

            logging.debug("Frame #{0}: {1}{2}".format(frame.order,
                             frame.symbolsource.symbol.name, inlined))
