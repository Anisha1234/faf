#!/usr/bin/python
import os
import sys
import logging
import unittest2 as unittest

sys.path.insert(0, os.path.abspath(".."))
os.environ["PATH"] = "{0}:{1}".format(os.path.abspath(".."), os.environ["PATH"])
from pyfaf.storage.symbol import Symbol

import faftests

MAPPING = {
    '_ZN11QMetaObject11removeGuardEPP7QObject':
      'QMetaObject::removeGuard(QObject**)',

    '_ZN8KInotify18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv':
      'KInotify::qt_static_metacall(QObject*, QMetaObject::Call, int, void**)',

    'not_mangled':
      None
    }

class RetraceTestCase(faftests.RealworldCase):
    def test_demangling(self):
        self.save_report('cpp_mangled')
        for symbol in self.db.session.query(Symbol).all():
            self.assertEqual(MAPPING[symbol.name], symbol.nice_name)

if __name__ == '__main__':
    logging.basicConfig(level=logging.INFO)
    unittest.main()
