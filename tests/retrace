#!/usr/bin/python
# -*- encoding: utf-8 -*-
import os
import sys
import logging
import unittest2 as unittest

sys.path.insert(0, os.path.abspath(".."))
os.environ["PATH"] = "{0}:{1}".format(os.path.abspath(".."), os.environ["PATH"])
from pyfaf.retrace import retrace_symbols

import faftests

WILL_CRASH_RESULT = [
                ('raise', '/lib64/libc.so.6', '64'),
                ('abort', '/lib64/libc.so.6', '93'),
                ('main', '/usr/bin/will_abort', '6')]

WILL_CRASH_RESULT_BLANKED = [
                ('raise', '/lib64/libc.so.6', '64'),
                ('abort', '/lib64/libc.so.6', '93'),
                ('??', '/usr/bin/will_abort', '6')]

class RetraceTestCase(faftests.RealworldCase):
    def test_retrace_simple(self):
        self.save_report('f17_will_abort')
        retrace_symbols(self.db.session)
        self.compare_symbols(WILL_CRASH_RESULT)

    def test_retrace_blanked(self):
        self.save_report('f17_will_abort_blanked')
        retrace_symbols(self.db.session)
        self.compare_symbols(WILL_CRASH_RESULT_BLANKED)

    def test_retrace_usr_add(self):
        self.save_report('f17_will_abort_usr_add_required')
        retrace_symbols(self.db.session)
        self.compare_symbols(WILL_CRASH_RESULT)

    def test_retrace_usr_strip(self):
        self.save_report('f17_will_abort_usr_strip_required')
        retrace_symbols(self.db.session)
        self.compare_symbols(WILL_CRASH_RESULT)

    def test_retrace_duplicates(self):
        self.save_report('f17_will_abort')
        self.save_report('f17_will_abort_usr_add_required')
        self.save_report('f17_will_abort_usr_strip_required')
        retrace_symbols(self.db.session)
        self.compare_symbols(WILL_CRASH_RESULT)

if __name__ == '__main__':
    logging.basicConfig(level=logging.INFO)
    unittest.main()
