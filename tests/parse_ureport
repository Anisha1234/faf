#!/usr/bin/python
# -*- encoding: utf-8 -*-
import json
import logging
import os
import sys
import unittest2 as unittest

sys.path.insert(0, os.path.abspath(".."))
os.environ["PATH"] = "{0}:{1}".format(os.path.abspath(".."), os.environ["PATH"])

from pyfaf.ureport import validate
from utils import faftests

class ParseTestCase(faftests.RealworldCase):
    def _get_ureport(self, filename):
        with open(os.path.join("sample_reports", filename), "r") as f:
            result = json.load(f)

        return result

    def _test_files(self, files):
        for filename in files:
            ureport = self._get_ureport(filename)
            validate(ureport)

    def test_fedora(self):
        files = [ "cpp_mangled", "f17_will_abort",
                  "f17_will_abort_blanked",
                  "f17_will_abort_usr_add_required",
                  "f17_will_abort_usr_strip_required" ]

        self._test_files(files)

    def test_el(self):
        files = [ "el7_alpha3", "el7_beta" ]
        self._test_files(files)

    def test_suse(self):
        files = [ "opensuse_factory", "opensuse_tumbleweed", "opensuse_12_2" ]
        self._test_files(files)

if __name__ == '__main__':
    logging.basicConfig(level=logging.INFO)
    unittest.main()
