#!/usr/bin/python
# -*- encoding: utf-8 -*-
import os
import sys
import logging
import tempfile
import unittest2 as unittest

sys.path.insert(0, os.path.abspath(".."))
os.environ["PATH"] = "{0}:{1}".format(os.path.abspath(".."), os.environ["PATH"])

import pyfaf

from utils import faftests


class TemplateTestCase(faftests.ConfigurationCase):
    '''
    Tests for pyfaf.template
    '''
    @classmethod
    def setUpClass(cls):
        '''
        Create temporary templates dir and set required configuration
        variables.
        '''
        super(TemplateTestCase, cls).setUpClass()
        cls.templates_dir = tempfile.mkdtemp(prefix="faf-test-template",
                                             dir=cls.temp_dir)
        pyfaf.config.CONFIG['main.templatesdir'] = cls.templates_dir

    def create_template(self, name, content):
        '''
        Create `name` template with `content` in temporary directory
        '''
        with open(os.path.join(self.templates_dir, name), 'w+') as file:
            file.write(content)

    def test_template_loading(self):
        '''
        Test loading and rendering of a simple template.
        '''
        self.create_template('simple', 'Example')
        out = pyfaf.template.render('simple', dict())
        self.assertEqual(out, 'Example')

    def test_template_context_variables(self):
        '''
        Test context variable rendering.
        '''
        self.create_template('vars', '{{ var1 }} {{ var2 }}')
        out = pyfaf.template.render('vars', dict(var1='Hello', var2='world!'))
        self.assertEqual(out, 'Hello world!')

    def test_template_default_variables(self):
        '''
        Test rendering of default variables.
        '''
        self.create_template('vars', '{{ server_url }} {{ server_email }}')
        out = pyfaf.template.render('vars', dict())
        self.assertIn(pyfaf.config.CONFIG['hub.serverurl'], out)
        self.assertIn(pyfaf.config.CONFIG['hub.serveremail'], out)

if __name__ == '__main__':
    logging.basicConfig(level=logging.INFO)
    unittest.main()
