#!/usr/bin/python
# Copyright (C) 2012 Red Hat, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import logging

import pyfaf
from pyfaf.storage.report import Report
from pyfaf.storage.problem import Problem, ProblemComponent


if __name__ == "__main__":
    # Command line argument processing
    cmdline_parser = pyfaf.argparse.ArgumentParser(description="Cluster reports into problems.")
    cmdline_parser.add_argument("--from-scratch", action="store_true", default=False, help="Remove all old problems.")
    cmdline_parser.add_argument("--level", default="0.3", help="Specify cluster cutting level.")
    cmdline_parser.add_argument("--distance", default="levenshtein", help="Set distance function used in clustering.")
    cmdline_parser.add_argument("--max-cluster-size", default=2000, help="Set maximum funs cluster size.")
    cmdline_args = cmdline_parser.parse_args()

    db = pyfaf.storage.Database(debug=cmdline_args.verbose > 2)

    if cmdline_args.from_scratch:
        logging.info("Removing old problems.")
        db.session.query(Report).update({"problem_id": None})
        db.session.query(ProblemComponent).delete()
        db.session.query(Problem).delete()

    pyfaf.cluster.create_problems(
        db,
        max_cluster_size=cmdline_args.max_cluster_size,
        distance=cmdline_args.distance,
        cut_level=float(cmdline_args.level))
